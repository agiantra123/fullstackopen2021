{"version":3,"sources":["services/notes.js","App.js","index.js"],"names":["baseURL","notes","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Notification","message","className","Filter","_value","_onChange","value","onChange","PersonForm","_valueName","_onChangeName","_valueNumber","_onChangeNumber","_submit","type","onClick","Persons","_filteredPersons","_onClick","map","_filteredPerson","name","number","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","class","errorMessage","setErrorMessage","useEffect","notesServices","updateName","window","confirm","person","setTimeout","catch","error","event","target","preventDefault","newPerson","trim","find","concat","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a59bb183.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const response = axios.get(baseURL);\r\n  return response.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const response = axios.post(baseURL, newObject);\r\n  return response.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const response = axios.delete(`${baseURL}/${id}`);\r\n  return response.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const response = axios.put(`${baseURL}/${id}`, newObject);\r\n  return response.then((response) => response.data);\r\n};\r\n\r\nconst notes = { getAll, create, remove, update };\r\n\r\nexport default notes;\r\n","import React, { useState, useEffect } from 'react';\nimport notesServices from './services/notes';\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null;\n  }\n  return (\n    <div className={`${className}`}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nconst Filter = ({ _value, _onChange }) => {\n  return (\n    <form>\n      <div>\n        filter shown with: <input value={_value} onChange={_onChange} />\n      </div>\n    </form>\n  );\n};\n\nconst PersonForm = ({\n  _valueName,\n  _onChangeName,\n  _valueNumber,\n  _onChangeNumber,\n  _submit,\n}) => {\n  return (\n    <form>\n      <div>\n        name: <input value={_valueName} onChange={_onChangeName} />\n      </div>\n      <div>\n        number: <input value={_valueNumber} onChange={_onChangeNumber} />\n      </div>\n      <div>\n        <button type='submit' onClick={_submit}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ _filteredPersons, _onClick }) => {\n  return (\n    <div>\n      {_filteredPersons.map((_filteredPerson) => {\n        return (\n          <div key={_filteredPerson.number}>\n            <p>\n              {_filteredPerson.name} - {_filteredPerson.number}\n            </p>\n            <button\n              onClick={() => _onClick(_filteredPerson.id, _filteredPerson.name)}\n            >\n              Delete\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [errorMessage, setErrorMessage] = useState({\n    message: null,\n    class: null,\n  });\n\n  useEffect(() => {\n    notesServices.getAll().then((data) => {\n      setPersons(data);\n    });\n\n    // without separate module\n    // axios.get('http://localhost:3001/persons').then((response) => {\n    //   const data = response.data;\n    //   setPersons(data);\n    // });\n  }, []);\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    // console.log(event.target.value);\n    setNewFilter(event.target.value);\n  };\n\n  const filteredPersons = () => {\n    return persons.filter((person) =>\n      person.name.toLowerCase().includes(newFilter.toLowerCase())\n    );\n  };\n\n  const submitNewName = (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName.trim(), number: newNumber.trim() };\n    if (persons.find((person) => person.name === newName.trim())) {\n      const person = persons.find((person) => person.name === newName.trim());\n      updateName(person.id, newPerson, person.name);\n      // alert(`${newName.trim()} is already added to phonebook`);\n    } else {\n      notesServices.create(newPerson).then((data) => {\n        setPersons(persons.concat(data));\n        setErrorMessage({ message: `added ${data.name}`, class: 'success' });\n        setTimeout(() => setErrorMessage({ message: null, class: null }), 5000);\n        setNewName('');\n        setNewNumber('');\n      });\n\n      // without separate module\n      // axios\n      //   .post('http://localhost:3001/persons', newPerson)\n      //   .then((response) => {\n      //     setPersons(persons.concat(response.data));\n      //     setNewName('');\n      //     setNewNumber('');\n      //   });\n\n      // without updating db\n      // setPersons(\n      //   persons.concat({ name: newName.trim(), number: newNumber.trim() })\n      // );\n      // setNewName('');\n      // setNewNumber('');\n    }\n  };\n\n  const removeName = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      notesServices.remove(id).then((data) => {\n        setPersons(persons.filter((person) => person.id !== id));\n      });\n    }\n  };\n\n  const updateName = (id, newObject, name) => {\n    if (\n      window.confirm(\n        `${name} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      notesServices\n        .update(id, newObject)\n        .then((data) => {\n          setPersons(\n            persons.map((person) => (person.id !== id ? person : data))\n          );\n          setErrorMessage({\n            message: `updated ${data.name}`,\n            class: 'success',\n          });\n          setTimeout(\n            () => setErrorMessage({ message: null, class: null }),\n            5000\n          );\n        })\n        .catch((error) => {\n          setErrorMessage({\n            message: `Information of ${newObject.name} has already been removed from server`,\n            class: 'error',\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={errorMessage.message}\n        className={errorMessage.class}\n      />\n      <Filter _value={newFilter} _onChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        _valueName={newName}\n        _onChangeName={handleNameChange}\n        _valueNumber={newNumber}\n        _onChangeNumber={handleNumberChange}\n        _submit={submitNewName}\n      />\n\n      <h2>Numbers</h2>\n      <Persons _filteredPersons={filteredPersons()} _onClick={removeName} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}